<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1126" onload="init(evt)" viewBox="0 0 1200 1126" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
	<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
	<!-- NOTES:  -->
	<defs >
		<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
			<stop stop-color="#eeeeee" offset="5%" />
			<stop stop-color="#eeeeb0" offset="95%" />
		</linearGradient>
	</defs>
	<style type="text/css">
		.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	</style>
	<script type="text/ecmascript">
		<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
	</script>
	<rect x="0.0" y="0" width="1200.0" height="1126.0" fill="url(#background)"  />
	<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flamegraph for Task 16 in stage 5</text>
	<text text-anchor="" x="10.00" y="1109" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
	<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
	<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
	<text text-anchor="" x="1090.00" y="1109" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.hadoop.io.retry.RetryProxy.create (1 samples, 100.00%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(234,204,28)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.hadoop.io.retry.RetryProxy.create</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.hadoop.hdfs.DistributedFileSystem.initialize (1 samples, 100.00%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(222,168,48)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.hadoop.hdfs.DistributedFileSystem.initialize</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.hadoop.io.retry.RetryInvocationHandler$ProxyDescriptor.&lt;init&gt; (1 samples, 100.00%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(247,163,22)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.hadoop.io.retry.RetryInvocationHandler$ProxyDescriptor.&lt;init&gt;</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>java.lang.reflect.WeakCache$Factory.get (1 samples, 100.00%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(248,63,42)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.reflect.WeakCache$Factory.get</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext (1 samples, 100.00%)</title><rect x="10.0" y="853" width="1180.0" height="15.0" fill="rgb(218,8,54)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile (1 samples, 100.00%)</title><rect x="10.0" y="821" width="1180.0" height="15.0" fill="rgb(230,116,0)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>java.lang.reflect.Proxy.getProxyClass0 (1 samples, 100.00%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(251,125,41)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.reflect.Proxy.getProxyClass0</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>all (1 samples, 100%)</title><rect x="10.0" y="1077" width="1180.0" height="15.0" fill="rgb(239,157,50)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="1087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>sun.misc.ProxyGenerator.generateClassFile (1 samples, 100.00%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(208,51,40)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.misc.ProxyGenerator.generateClassFile</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>java.lang.Thread.run (1 samples, 100.00%)</title><rect x="10.0" y="1061" width="1180.0" height="15.0" fill="rgb(244,43,17)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="1071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.Thread.run</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>java.net.URLClassLoader$1.run (1 samples, 100.00%)</title><rect x="10.0" y="85" width="1180.0" height="15.0" fill="rgb(247,191,50)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.net.URLClassLoader$1.run</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$10$$anon$1.hasNext (1 samples, 100.00%)</title><rect x="10.0" y="917" width="1180.0" height="15.0" fill="rgb(228,40,0)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$10$$anon$1.hasNext</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (1 samples, 100.00%)</title><rect x="10.0" y="1045" width="1180.0" height="15.0" fill="rgb(253,149,53)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="1055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util.concurrent.ThreadPoolExecutor$Worker.run</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>java.lang.Class.getMethods (1 samples, 100.00%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(239,30,8)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.Class.getMethods</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.hadoop.hdfs.DFSClient.&lt;init&gt; (1 samples, 100.00%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(209,55,43)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.hadoop.hdfs.DFSClient.&lt;init&gt;</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider.getProxy (1 samples, 100.00%)</title><rect x="10.0" y="453" width="1180.0" height="15.0" fill="rgb(235,115,29)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider.getProxy</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.hadoop.io.retry.RetryInvocationHandler.&lt;init&gt; (1 samples, 100.00%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(253,150,50)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.hadoop.io.retry.RetryInvocationHandler.&lt;init&gt;</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.spark.executor.Executor$TaskRunner.run (1 samples, 100.00%)</title><rect x="10.0" y="1013" width="1180.0" height="15.0" fill="rgb(212,140,33)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="1023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.spark.executor.Executor$TaskRunner.run</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.scan_nextBatch_0$ (1 samples, 100.00%)</title><rect x="10.0" y="869" width="1180.0" height="15.0" fill="rgb(238,91,52)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.scan_nextBatch_0$</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>sun.misc.URLClassPath.getNextLoader (1 samples, 100.00%)</title><rect x="10.0" y="37" width="1180.0" height="15.0" fill="rgb(228,99,33)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.misc.URLClassPath.getNextLoader</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.spark.sql.execution.datasources.parquet.VectorizedParquetRecordReader.initialize (1 samples, 100.00%)</title><rect x="10.0" y="773" width="1180.0" height="15.0" fill="rgb(220,127,44)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.spark.sql.execution.datasources.parquet.VectorizedParquetRecordReader.initialize</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.spark.sql.execution.datasources.parquet.ParquetFileFormat$$anonfun$buildReaderWithPartitionValues$1.apply (1 samples, 100.00%)</title><rect x="10.0" y="805" width="1180.0" height="15.0" fill="rgb(240,208,13)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.spark.sql.execution.datasources.parquet.ParquetFileFormat$$anonfun$buildReaderWithPartitionValues$1.apply</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.spark.scheduler.Task.run (1 samples, 100.00%)</title><rect x="10.0" y="997" width="1180.0" height="15.0" fill="rgb(248,96,10)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="1007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.spark.scheduler.Task.run</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.spark.sql.execution.BufferedRowIterator.hasNext (1 samples, 100.00%)</title><rect x="10.0" y="901" width="1180.0" height="15.0" fill="rgb(245,117,42)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.spark.sql.execution.BufferedRowIterator.hasNext</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>java.util.concurrent.ThreadPoolExecutor.runWorker (1 samples, 100.00%)</title><rect x="10.0" y="1029" width="1180.0" height="15.0" fill="rgb(247,181,31)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="1039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util.concurrent.ThreadPoolExecutor.runWorker</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.hadoop.hdfs.NameNodeProxiesClient.createProxyWithClientProtocol (1 samples, 100.00%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(254,11,27)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.hadoop.hdfs.NameNodeProxiesClient.createProxyWithClientProtocol</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.hadoop.fs.FileSystem$Cache.getInternal (1 samples, 100.00%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(253,77,33)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.hadoop.fs.FileSystem$Cache.getInternal</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>java.lang.Class.privateGetPublicMethods (1 samples, 100.00%)</title><rect x="10.0" y="229" width="1180.0" height="15.0" fill="rgb(211,35,17)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.Class.privateGetPublicMethods</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.hadoop.ipc.RPC.getProtocolProxy (1 samples, 100.00%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(229,207,38)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.hadoop.ipc.RPC.getProtocolProxy</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>java.lang.ClassLoader.loadClass (1 samples, 100.00%)</title><rect x="10.0" y="165" width="1180.0" height="15.0" fill="rgb(253,195,23)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.ClassLoader.loadClass</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.hadoop.hdfs.NameNodeProxiesClient.createHAProxy (1 samples, 100.00%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(213,126,2)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.hadoop.hdfs.NameNodeProxiesClient.createHAProxy</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider.getProxy (1 samples, 100.00%)</title><rect x="10.0" y="469" width="1180.0" height="15.0" fill="rgb(239,102,9)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider.getProxy</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>java.lang.Class.privateGetDeclaredMethods (1 samples, 100.00%)</title><rect x="10.0" y="197" width="1180.0" height="15.0" fill="rgb(226,122,30)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.Class.privateGetDeclaredMethods</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.hadoop.fs.FileSystem.createFileSystem (1 samples, 100.00%)</title><rect x="10.0" y="629" width="1180.0" height="15.0" fill="rgb(247,174,7)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.hadoop.fs.FileSystem.createFileSystem</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext (1 samples, 100.00%)</title><rect x="10.0" y="885" width="1180.0" height="15.0" fill="rgb(224,20,7)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>sun.misc.ProxyGenerator.generateProxyClass (1 samples, 100.00%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(244,36,27)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.misc.ProxyGenerator.generateProxyClass</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.spark.sql.execution.datasources.parquet.SpecificParquetRecordReaderBase.initialize (1 samples, 100.00%)</title><rect x="10.0" y="757" width="1180.0" height="15.0" fill="rgb(246,21,9)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.spark.sql.execution.datasources.parquet.SpecificParquetRecordReaderBase.initialize</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.parquet.hadoop.util.HadoopInputFile.fromPath (1 samples, 100.00%)</title><rect x="10.0" y="725" width="1180.0" height="15.0" fill="rgb(247,111,7)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.parquet.hadoop.util.HadoopInputFile.fromPath</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.hadoop.hdfs.DFSClient.&lt;init&gt; (1 samples, 100.00%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(212,137,45)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.hadoop.hdfs.DFSClient.&lt;init&gt;</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.hadoop.hdfs.NameNodeProxiesClient.createNonHAProxyWithClientProtocol (1 samples, 100.00%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(224,160,34)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.hadoop.hdfs.NameNodeProxiesClient.createNonHAProxyWithClientProtocol</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.parquet.hadoop.ParquetFileReader.readFooter (1 samples, 100.00%)</title><rect x="10.0" y="741" width="1180.0" height="15.0" fill="rgb(243,187,15)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.parquet.hadoop.ParquetFileReader.readFooter</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>scala.collection.Iterator$$anon$11.hasNext (1 samples, 100.00%)</title><rect x="10.0" y="933" width="1180.0" height="15.0" fill="rgb(212,32,21)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >scala.collection.Iterator$$anon$11.hasNext</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>java.lang.reflect.WeakCache.get (1 samples, 100.00%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(205,36,24)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.reflect.WeakCache.get</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.hadoop.fs.FileSystem$Cache.get (1 samples, 100.00%)</title><rect x="10.0" y="677" width="1180.0" height="15.0" fill="rgb(232,49,48)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.hadoop.fs.FileSystem$Cache.get</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.hadoop.io.retry.RetryInvocationHandler.&lt;init&gt; (1 samples, 100.00%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(230,169,19)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.hadoop.io.retry.RetryInvocationHandler.&lt;init&gt;</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>java.net.URLClassLoader.findClass (1 samples, 100.00%)</title><rect x="10.0" y="117" width="1180.0" height="15.0" fill="rgb(233,17,29)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.net.URLClassLoader.findClass</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.spark.scheduler.ShuffleMapTask.runTask (1 samples, 100.00%)</title><rect x="10.0" y="981" width="1180.0" height="15.0" fill="rgb(234,184,36)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.spark.scheduler.ShuffleMapTask.runTask</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>java.net.URLClassLoader$1.run (1 samples, 100.00%)</title><rect x="10.0" y="69" width="1180.0" height="15.0" fill="rgb(238,111,10)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.net.URLClassLoader$1.run</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>java.security.AccessController.doPrivileged (1 samples, 100.00%)</title><rect x="10.0" y="101" width="1180.0" height="15.0" fill="rgb(251,53,32)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.security.AccessController.doPrivileged</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>sun.misc.Launcher$AppClassLoader.loadClass (1 samples, 100.00%)</title><rect x="10.0" y="149" width="1180.0" height="15.0" fill="rgb(222,118,11)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.misc.Launcher$AppClassLoader.loadClass</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator (1 samples, 100.00%)</title><rect x="10.0" y="837" width="1180.0" height="15.0" fill="rgb(226,150,12)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.hadoop.fs.Path.getFileSystem (1 samples, 100.00%)</title><rect x="10.0" y="709" width="1180.0" height="15.0" fill="rgb(209,137,25)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.hadoop.fs.Path.getFileSystem</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.hadoop.hdfs.server.namenode.ha.ClientHAProxyFactory.createProxy (1 samples, 100.00%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(227,23,3)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.hadoop.hdfs.server.namenode.ha.ClientHAProxyFactory.createProxy</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.spark.scheduler.ShuffleMapTask.runTask (1 samples, 100.00%)</title><rect x="10.0" y="965" width="1180.0" height="15.0" fill="rgb(226,161,42)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.spark.scheduler.ShuffleMapTask.runTask</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.hadoop.ipc.ProtobufRpcEngine.getProxy (1 samples, 100.00%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(249,92,20)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.hadoop.ipc.ProtobufRpcEngine.getProxy</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>java.lang.reflect.Proxy$ProxyClassFactory.apply (1 samples, 100.00%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(241,27,42)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.reflect.Proxy$ProxyClassFactory.apply</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>java.lang.Class.privateGetPublicMethods (1 samples, 100.00%)</title><rect x="10.0" y="213" width="1180.0" height="15.0" fill="rgb(221,58,48)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.Class.privateGetPublicMethods</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write (1 samples, 100.00%)</title><rect x="10.0" y="949" width="1180.0" height="15.0" fill="rgb(251,81,19)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.hadoop.fs.FileSystem.access$200 (1 samples, 100.00%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(241,14,24)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.hadoop.fs.FileSystem.access$200</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>java.lang.ClassLoader.loadClass (1 samples, 100.00%)</title><rect x="10.0" y="133" width="1180.0" height="15.0" fill="rgb(252,97,8)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.ClassLoader.loadClass</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.hadoop.fs.FileSystem.get (1 samples, 100.00%)</title><rect x="10.0" y="693" width="1180.0" height="15.0" fill="rgb(224,161,44)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.hadoop.fs.FileSystem.get</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>java.lang.reflect.Proxy.newProxyInstance (1 samples, 100.00%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(235,177,3)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.reflect.Proxy.newProxyInstance</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>java.lang.Class.getDeclaredMethods0 (1 samples, 100.00%)</title><rect x="10.0" y="181" width="1180.0" height="15.0" fill="rgb(242,201,29)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.Class.getDeclaredMethods0</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>org.apache.spark.sql.execution.datasources.parquet.ParquetFileFormat$$anonfun$buildReaderWithPartitionValues$1.apply (1 samples, 100.00%)</title><rect x="10.0" y="789" width="1180.0" height="15.0" fill="rgb(210,95,28)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >org.apache.spark.sql.execution.datasources.parquet.ParquetFileFormat$$anonfun$buildReaderWithPartitionValues$1.apply</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>java.lang.reflect.Proxy$ProxyClassFactory.apply (1 samples, 100.00%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(243,107,6)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.reflect.Proxy$ProxyClassFactory.apply</text>
	</g>
	<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
		<title>sun.misc.URLClassPath.getResource (1 samples, 100.00%)</title><rect x="10.0" y="53" width="1180.0" height="15.0" fill="rgb(219,194,48)" rx="2" ry="2" />
		<text text-anchor="" x="13.00" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.misc.URLClassPath.getResource</text>
	</g>
</svg>
